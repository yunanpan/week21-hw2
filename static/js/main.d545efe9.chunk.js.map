{"version":3,"sources":["boards.js","calculateWinner.js","chess.js","App.js","reportWebVitals.js","index.js"],"names":["BoardLine","styled","div","BoardBackground","Boards","useState","Array","fill","boardsRows","map","board","i","entry","_","j","calculateHorizon","squares","length","calculateVertical","calculate45","calculate135","Square","button","props","value","ChessBoard","x","y","handleClick","onClick","ChessBoardRow","ChessBoardWrapper","ReplayButton","Chess","setSquares","blackIsNext","setNext","newSquares","JSON","parse","stringify","whoIsNext","winner","result","calculateWinner","status","chess","square","Wrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d545efe9.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\n\r\nconst BoardLine = styled.div`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  padding: 0px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 1px solid #aca095;\r\n`;\r\n\r\nconst BoardBackground = styled.div`\r\n  display: flex;\r\n  box-sizing: border-box;\r\n  width: calc(20px * 20);\r\n  background-color: #efe9e5;\r\n`;\r\n\r\nexport default function Boards() {\r\n  const [boards] = useState(Array(20).fill(Array(20).fill(null)));\r\n\r\n  const boardsRows = boards.map((board, i) => {\r\n    const entry = board.map((_, j) => {\r\n      return <BoardLine key={j}></BoardLine>;\r\n    });\r\n    return <BoardBackground key={i}>{entry}</BoardBackground>;\r\n  });\r\n\r\n  return <div>{boardsRows}</div>;\r\n}\r\n","function calculateHorizon(squares, i) {\r\n  for (let j = 0; j < squares.length - 4; j++) {\r\n    if (\r\n      squares[i][j] !== null &&\r\n      squares[i][j] === squares[i][j + 1] &&\r\n      squares[i][j + 1] === squares[i][j + 2] &&\r\n      squares[i][j + 2] === squares[i][j + 3] &&\r\n      squares[i][j + 3] === squares[i][j + 4]\r\n    ) {\r\n      return squares[i][j];\r\n    }\r\n  }\r\n}\r\n\r\nfunction calculateVertical(squares, i) {\r\n  for (let j = 0; j < squares.length - 4; j++) {\r\n    if (\r\n      squares[j][i] !== null &&\r\n      squares[j][i] === squares[j + 1][i] &&\r\n      squares[j + 1][i] === squares[j + 2][i] &&\r\n      squares[j + 2][i] === squares[j + 3][i] &&\r\n      squares[j + 3][i] === squares[j + 4][i]\r\n    ) {\r\n      return squares[j][i];\r\n    }\r\n  }\r\n}\r\n\r\nfunction calculate45(squares, i) {\r\n  for (let j = 0; j < squares.length - 4; j++) {\r\n    if (\r\n      squares[i][j] !== null &&\r\n      squares[i][j] === squares[i + 1][j + 1] &&\r\n      squares[i + 1][j + 1] === squares[i + 2][j + 2] &&\r\n      squares[i + 2][j + 2] === squares[i + 3][j + 3] &&\r\n      squares[i + 3][j + 3] === squares[i + 4][j + 4]\r\n    ) {\r\n      return squares[i][j];\r\n    }\r\n  }\r\n}\r\n\r\nfunction calculate135(squares, i) {\r\n  for (let j = squares.length - 4; j > 0; j--) {\r\n    if (\r\n      squares[i][j] !== null &&\r\n      squares[i][j] === squares[i + 1][j - 1] &&\r\n      squares[i + 1][j - 1] === squares[i + 2][j - 2] &&\r\n      squares[i + 2][j - 2] === squares[i + 3][j - 3] &&\r\n      squares[i + 3][j - 3] === squares[i + 4][j - 4]\r\n    ) {\r\n      return squares[i][j];\r\n    }\r\n  }\r\n}\r\n\r\nexport function calculateWinner(squares) {\r\n  for (let i = 0; i < squares.length; i++) {\r\n    // 算橫排\r\n    let result = calculateHorizon(squares, i);\r\n    if (result === \"X\" || result === \"O\") return result;\r\n    // 算直排\r\n    result = calculateVertical(squares, i);\r\n    if (result === \"X\" || result === \"O\") return result;\r\n  }\r\n\r\n  for (let i = 0; i < squares.length - 4; i++) {\r\n    // 算 45 度\r\n    let result = calculate45(squares, i);\r\n    if (result === \"X\" || result === \"O\") return result;\r\n    // 算 135 度\r\n    result = calculate135(squares, i);\r\n    if (result === \"X\" || result === \"O\") return result;\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { calculateWinner } from \"./calculateWinner\";\r\n\r\nconst Square = styled.button`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  padding: 0px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: none;\r\n  background-color: transparent;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.value === \"X\" &&\r\n    `\r\n    &:before {\r\n      content: \"\";\r\n      position: absolute;\r\n      left: 50%;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%);\r\n      width: 75%;\r\n      height: 75%;\r\n      border-radius: 50%;\r\n      box-shadow: 1px 1.5px 2px 1px #b7b7b7;\r\n      background-color: black;\r\n    }\r\n  `}\r\n\r\n  ${(props) =>\r\n    props.value === \"O\" &&\r\n    `\r\n    &:before {\r\n      content: \"\";\r\n      position: absolute;\r\n      left: 50%;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%);\r\n      width: 75%;\r\n      height: 75%;\r\n      border-radius: 50%;\r\n      box-shadow: 1px 1.5px 2px 1px #b7b7b7;\r\n      background-color: white;\r\n    }\r\n  `}\r\n`;\r\n\r\nfunction ChessBoard(props) {\r\n  const { x, y, squares, handleClick } = props;\r\n  return (\r\n    <Square onClick={() => handleClick(x, y)} value={squares[x][y]}></Square>\r\n  );\r\n}\r\n\r\nconst ChessBoardRow = styled.div`\r\n  font-size: 0px;\r\n  min-width: 600px;\r\n`;\r\n\r\nconst ChessBoardWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst ReplayButton = styled.div`\r\n  padding: 5px;\r\n  background: black;\r\n  text-align: center;\r\n  color: white;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default function Chess() {\r\n  const [squares, setSquares] = useState(Array(19).fill(Array(19).fill(null)));\r\n  const [blackIsNext, setNext] = useState(true);\r\n\r\n  const handleClick = (x, y) => {\r\n    const newSquares = JSON.parse(JSON.stringify(squares));\r\n    // 不能重複點同一格\r\n    if (newSquares[x][y] === null) {\r\n      newSquares[x][y] = blackIsNext ? \"X\" : \"O\";\r\n      setSquares(newSquares);\r\n      setNext(!blackIsNext);\r\n    }\r\n  };\r\n\r\n  const handleReplayClick = () => {\r\n    setNext(true);\r\n    setSquares(Array(19).fill(Array(19).fill(null)));\r\n  };\r\n\r\n  // 計算誰輸誰贏\r\n  const whoIsNext = `Next player: ${blackIsNext ? \"blackchess\" : \"whitechess\"}`;\r\n  let winner = calculateWinner(squares); // 'X', 'O'\r\n  let status = winner\r\n    ? winner === \"X\"\r\n      ? \"Winner: blackchess\"\r\n      : \"Winner: whitechess\"\r\n    : whoIsNext;\r\n\r\n  const chess = squares.map((square, i) => {\r\n    const entry = square.map((_, j) => {\r\n      return (\r\n        <ChessBoard\r\n          key={j}\r\n          x={i}\r\n          y={j}\r\n          squares={squares}\r\n          handleClick={handleClick}\r\n        />\r\n      );\r\n    });\r\n    return <ChessBoardRow key={i}>{entry}</ChessBoardRow>;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ChessBoardWrapper>{chess}</ChessBoardWrapper>\r\n      <h3>{status}</h3>\r\n      <ReplayButton onClick={handleReplayClick}>重玩</ReplayButton>\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport Boards from \"./boards\";\r\nimport Chess from \"./chess\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  margin-top: 50px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Wrapper>\r\n      <Boards />\r\n      <Chess />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}